name: Build and Publish

on:
  release:
    types:
      - created

jobs:
  setup-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code and Setup Go
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod' # Use the Go version specified in go.mod

      - name: Cache Go dependencies and build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

  build-linux-amd64:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for Linux (amd64)
        run: |
          mkdir -p builds/linux-amd64
          GOARCH=amd64 GOOS=linux go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/linux-amd64/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-amd64-linux.zip" builds/linux-amd64/nzb-monkey-go

  build-linux-arm:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for Linux (arm)
        run: |
          mkdir -p builds/linux-arm
          GOARCH=arm GOOS=linux go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/linux-arm/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-arm-linux.zip" builds/linux-arm/nzb-monkey-go

  build-linux-arm64:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for Linux (arm64)
        run: |
          mkdir -p builds/linux-arm64
          GOARCH=arm64 GOOS=linux go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/linux-arm64/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-arm64-linux.zip" builds/linux-arm64/nzb-monkey-go

  build-linux-armv6:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for Linux (armv6)
        run: |
          mkdir -p builds/linux-armv6
          GOARCH=arm GOARM=6 GOOS=linux go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/linux-armv6/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-armv6-linux.zip" builds/linux-armv6/nzb-monkey-go

  build-linux-armv7:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for Linux (armv7)
        run: |
          mkdir -p builds/linux-armv7
          GOARCH=arm GOARM=7 GOOS=linux go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/linux-armv7/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-armv7-linux.zip" builds/linux-armv7/nzb-monkey-go

  build-linux-armv8:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for Linux (armv8)
        run: |
          mkdir -p builds/linux-armv8
          GOARCH=arm64 GOOS=linux go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/linux-armv8/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-armv8-linux.zip" builds/linux-armv8/nzb-monkey-go

  build-macos-amd64:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for macOS (amd64)
        run: |
          mkdir -p builds/macos-amd64
          GOARCH=amd64 GOOS=darwin go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/macos-amd64/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-amd64-darwin.zip" builds/macos-amd64/nzb-monkey-go

  build-macos-arm64:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for macOS (arm64)
        run: |
          mkdir -p builds/macos-arm64
          GOARCH=arm64 GOOS=darwin go build -ldflags="-X main.version=${{ github.ref_name }}" -o builds/macos-arm64/nzb-monkey-go
          zip -j "nzb-monkey-go_${{ github.ref_name }}-arm64-darwin.zip" builds/macos-arm64/nzb-monkey-go

  build-windows-amd64:
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: Build for Windows (amd64)
        run: |
          mkdir -p builds/windows-amd64
          GOARCH=amd64 GOOS=windows go build -ldflags "-X main.version=${{ github.ref_name }}" -o builds/windows-amd64/nzb-monkey-go.exe
          zip -j "nzb-monkey-go_${{ github.ref_name }}-amd64-windows.zip" builds/windows-amd64/nzb-monkey-go.exe

  upload-release-assets:
    runs-on: ubuntu-latest
    needs: [build-linux-amd64, build-linux-arm, build-linux-arm64, build-linux-armv6, build-linux-armv7, build-linux-armv8, build-macos-amd64, build-macos-arm64, build-windows-amd64]

    steps:
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            nzb-monkey-go_*-*-*.zip
